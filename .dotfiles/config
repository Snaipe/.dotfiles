# Dotfiles-specific config
[dotfiles]
    lockFiles = yes
    matchThreshold = 10

# Push behaviour
[push]
    default = current

# Track origin/master
[branch "master"]
    remote = origin
    merge  = refs/heads/master

[alias]
    # convenient aliases
    files  = "!git i-files"
    lock   = "!git i-filept \"$@\" | sudo xargs chattr +i #"
    unlock = "!git i-filept \"$@\" | sudo xargs chattr -i #"
    edit   = "!git i-edit $(git i-filept \"$@\") #"

    # internals
    i-cfg     = "!git --git-dir=\"$HOME/.dotfiles/\" --work-tree=\"$HOME\""

    i-sudo    = "!cmd=\"$1\"; shift; "                      \
                "sudo -E git "                              \
                "   --git-dir=\"$HOME/.dotfiles/\" "        \
                "   --work-tree=\"$HOME\" \"$cmd\" \"$@\" #"

    i-pattern = "!printf ' -e \\|%s|!d ' \"$@\" #"

    i-splitl  = "!export IFS=\"$(printf '\\n\\r')\"; echo \"$*\" #"

    i-files   = "!if test $# -eq 0; then "                  \
                "  cmd=\"git i-cfg ls-files\"; " \
                "else "                                     \
                "  cmd=\"git i-cfg ls-files " \
                "       | sed $(git i-pattern \"$@\")\"; " \
                "fi; " \
                "$cmd | xargs -I @ git i-mode \"$HOME/@\" \"@\"; #"

    i-filept  = "!if test $# -eq 0; then "              \
                "  git i-cfg ls-files "                 \
                "    | sed -e \"s/^/$HOME/g\"; "        \
                "else "                                 \
                "  git i-cfg ls-files "                 \
                "    | sed $(git i-pattern \"$@\") "    \
                "    | sed -e \"s|^|$HOME/|g\"; "       \
                "fi #"

    i-askpick = "!git i-splitl \"$@\" | cat -n && echo -n 'Pick the one to edit: ' #"

    i-dopick  = "!git i-askpick \"$@\" "                                        \
                "  && read PICK "                                               \
                "  && git i-fedit $(git i-splitl \"$@\" | sed -n $PICK'p') #"

    i-mode    = "!echo $(git i-lockchr \"$1\")$(ls -l \"$1\" 2>/dev/null "  \
                "   | sed -e '/^total/d' "                                  \
                "   | head -n1 "                                            \
                "   | sed -E -e 's/^.(.{9}).*/\\1/g') \"$2\" #"

    i-lockchr = "!lsattr -d \"$1\" 2>/dev/null | sed -E -e 's/^....([i\\-]).*/\\1/g' #"


    i-locked  = "!lsattr \"$1\" 2>/dev/null | grep -E '^....i.*' >/dev/null #"

    i-feditlk = "!git unlock \"$1\"; "                          \
                "sudo -Eu \"$SUDO_USER\" \"$EDITOR\" \"$1\"; "  \
                "git lock \"$1\" #"

    i-fedit-l = "!if git i-locked \"$1\"; then "    \
                "  git i-sudo i-feditlk \"$1\"; "   \
                "else "                             \
                "  git i-fedit-n \"$1\"; "          \
                "fi #"

    i-fedit-n = "!$EDITOR \"$1\" #"

    i-fedit   = "!if [ \"$(git config dotfiles.lockFiles)\" = yes ]; then " \
                "  git i-fedit-l \"$1\"; "                                  \
                "else "                                                     \
                "  git i-fedit-n \"$1\"; "                                  \
                "fi #"

    i-edit    = "!if test $# -eq 1; "                                           \
                "  then git i-fedit \"$1\"; "                                   \
                "elif test $# -gt $(git config dotfiles.matchThreshold); then " \
                "  echo 'Too many dotfiles matching, restrict the pattern.'; "  \
                "elif test $# -gt 1; then "                                     \
                "  git i-dopick \"$@\"; "                                       \
                "fi #"

[core]
    repositoryformatversion = 0
    filemode = true
    bare = true
[status]
    showUntrackedFiles = no

[remote "origin"]
    url = git@github.com:Snaipe/.dotfiles.git
    fetch = +refs/heads/*:refs/remotes/origin/*
